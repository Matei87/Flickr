{"version":3,"sources":["img/logo.jpg","components/Navbar/Navbar.js","components/Search/Search.js","components/Posts/Posts.js","components/Pagination/Pagination.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","id","className","src","require","alt","Component","Search","formOnSubmit","onSubmit","type","placeholder","name","value","Posts","loading","pictureUrls","role","map","pic","key","Pagination","totalPages","nextPage","startPage","pageLinks","i","push","onClick","href","aria-label","Footer","Date","getFullYear","App","useState","picture","setPicture","setLoading","setError","setStartPage","setTotalPages","endPage","inputValue","setInputValue","useEffect","a","url","process","axios","get","res","data","photos","pages","getValue","pageNumber","photo","element","farm","server","secret","e","preventDefault","target","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a8340372.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.65cb554a.jpg\";","import React, { Component } from 'react';\r\nimport './Navbar.css';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <nav id=\"navbar\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <img src={require('../../../src/img/logo.jpg')} alt=\"logo\" />\r\n                            <p>Flickr Images</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Search.css';\r\n\r\nconst Search = ({ formOnSubmit }) => {\r\n    return (\r\n        <form onSubmit={formOnSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                placeholder='Search...'\r\n                name=\"name\"\r\n            />\r\n            <input className=\"btn btn-secondary btn-sm\" type=\"submit\" value='Submit' />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport './Posts.css';\r\n\r\n\r\nconst Posts = ({ loading, pictureUrls }) => {\r\n    if (loading) {\r\n        return <div className=\"spinner-border text-light\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </div>;\r\n    }\r\n\r\n    return (\r\n        <section id=\"results\">\r\n            <div className=\"container\">\r\n                <div className=\"pictures\">\r\n                    {pictureUrls.map(pic => {\r\n                        return <div className=\"picture\" key={pic}>\r\n                            <img src={pic} alt={pic} />\r\n                        </div>;\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Posts;","import React from 'react';\r\nimport './Pagination.css';\r\n\r\nconst Pagination = ({ totalPages, nextPage, startPage }) => {\r\n    const pageLinks = [];\r\n    for (let i = startPage; (i <= startPage + 4) && (i <= totalPages); i++) {\r\n        pageLinks.push(\r\n            <li className={startPage === i ? 'page-item active' : 'page-item'} key={i} onClick={() => nextPage(i)} >\r\n                <a className=\"page-link\" href=\"#\">{i}</a>\r\n            </li>)\r\n    }\r\n\r\n\r\n    return (\r\n        <div id=\"pagination\">\r\n            <nav aria-label=\"Page navigation\">\r\n                <ul className=\"pagination pagination-sm\">\r\n                    {startPage > 1 ? <li className='page-item' onClick={() => nextPage(totalPages - (totalPages - 1))} >\r\n                        <a className=\"page-link\" href=\"#\">\r\n                            <i className=\"fas fa-angle-double-left\" />\r\n                        </a>\r\n                    </li> : ''}\r\n                    {startPage > 1 ? <li className='page-item' onClick={() => nextPage(startPage - 1)} >\r\n                        <a className=\"page-link\" href=\"#\">\r\n                            <i className=\"fas fa-chevron-left\" />\r\n                        </a>\r\n                    </li> : ''}\r\n                    {pageLinks}\r\n                    {totalPages > startPage ? <li className='page-item' onClick={() => nextPage(startPage + 1)} >\r\n                        <a className=\"page-link\" href=\"#\">\r\n                            <i className=\"fas fa-chevron-right\" />\r\n                        </a>\r\n                    </li> : ''}\r\n                    {totalPages > startPage ? <li className='page-item' onClick={() => nextPage(totalPages)} >\r\n                        <a className=\"page-link\" href=\"#\">\r\n                            <i className=\"fas fa-angle-double-right\" />\r\n                        </a>\r\n                    </li> : ''}\r\n                </ul>\r\n            </nav>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { Component } from 'react';\r\nimport './Footer.css';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer>\r\n                Made by&nbsp;<span>Matei Mircea</span>&nbsp;@ {new Date().getFullYear()}\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from './components/Navbar/Navbar';\nimport Search from './components/Search/Search';\nimport Posts from './components/Posts/Posts';\nimport Pagination from './components/Pagination/Pagination';\nimport Footer from './components/Footer/Footer';\nimport axios from 'axios';\n\n\nconst App = () => {\n  const [picture, setPicture] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [startPage, setStartPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [endPage] = useState(60);\n  const [inputValue, setInputValue] = useState('');\n\n  const formOnSubmit = (e) => {\n    e.preventDefault();\n    setInputValue(e.target.name.value);\n  }\n\n  useEffect(() => {\n    const getValue = async () => {\n      try {\n        if (inputValue === '') {\n          setInputValue('birde')\n        } else {\n          setLoading(true);\n          let url = `https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${process.env.REACT_APP_API_KEY}&tags=${inputValue}&page=${startPage}&per_page=${endPage}&format=json&nojsoncallback=1`;\n          const res = await axios.get(url);\n          setTotalPages(res.data.photos.pages);\n          setPicture(res.data.photos);\n          setLoading(false);\n        }\n      } catch (e) {\n        setError(e);\n      }\n    }\n    getValue();\n  }, [inputValue])\n\n  // //Set next page\n  const nextPage = async (pageNumber) => {\n    try {\n      setLoading(true);\n      let url = `https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${process.env.REACT_APP_API_KEY}&tags=${inputValue}&page=${pageNumber}&per_page=${endPage}&format=json&nojsoncallback=1`;\n      const res = await axios.get(url);\n      setPicture(res.data.photos);\n      setStartPage(pageNumber);\n      setLoading(false);\n    } catch (e) {\n      setError(e);\n    }\n  }\n\n  let pic = [];\n  for (let value in picture.photo) {\n    pic.push(picture.photo[value])\n  }\n  let pictureUrls = [];\n  pic.map(element => {\n    pictureUrls.push(`http://farm${element.farm}.staticflickr.com/${element.server}/${element.id}_${element.secret}.jpg`);\n  });\n\n\n  return (\n    <>\n      <Navbar />\n      <Search\n        formOnSubmit={formOnSubmit}\n      />\n      {totalPages > 0 ? <Pagination totalPages={totalPages} startPage={startPage} nextPage={nextPage} /> : \"\"}\n      <Posts\n        loading={loading}\n        pictureUrls={pictureUrls}\n      />\n      {totalPages > 0 ? <Pagination totalPages={totalPages} startPage={startPage} nextPage={nextPage} /> : \"\"}\n      <Footer />\n    </>\n  );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}